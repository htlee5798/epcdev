<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- ########################################################################################## 
		### 선언적 Transaction ########################################################################################## -->
	
	<tx:advice id="txAdviceSrm" transaction-manager="transactionManagerSrm">
		<tx:attributes>
			<tx:method name="select*" read-only="true" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- 
	<tx:advice id="txAdviceNeo" transaction-manager="transactionManagerNeo">
		<tx:attributes>
			<tx:method name="select*" read-only="true" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
 	-->
 	
	<aop:config>
		<aop:pointcut id="ServiceRequiredTx" expression="execution(* com.lottemart..*Service.*(..))" />
		<aop:pointcut id="ServiceImplRequiredTx" expression="execution(* com.lottemart..*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdviceSrm" order="2" pointcut-ref="ServiceRequiredTx" />
		<aop:advisor advice-ref="txAdviceSrm" order="2" pointcut-ref="ServiceImplRequiredTx" />
		<!-- 
		<aop:advisor advice-ref="txAdviceNeo" order="2" pointcut-ref="ServiceRequiredTx" />
		<aop:advisor advice-ref="txAdviceNeo" order="2" pointcut-ref="ServiceImplRequiredTx" />
		 -->
	</aop:config>
	
    <bean id="transactionManagerSrm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource_srm" />
    </bean>
	<!-- 
	<bean id="transactionManagerNeo" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_neo" />
	</bean>
	 -->
	<!-- JNDI 방식 설정 -->
	<!-- @4UP 동적 초기화를 위해 EPCSpringConfig 로 설정 옮김 -->
	<!-- bean id="dataSource_srm" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/srm" />
	</bean>

	<bean id="dataSource_neo" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/neo" />
	</bean-->


	<!-- Properties 방식 설정 -->
	<!-- <bean id="dataSource_srm" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" 			value="${srmdb.driver}" />
		<property name="url" 						value="${srmdb.url}" /> 
		<property name="username" 					value="${srmdb.user}" />
		<property name="password"					value="${srmdb.passwd}" /> 
		<property name="maxActive" 					value="20" />
		<property name="maxIdle" 					value="4" />
		<property name="minIdle" 					value="2" />
		<property name="maxWait" 					value="-1" />
		<property name="initialSize" 				value="20" />
		<property name="poolPreparedStatements" 	value="true" />
		<property name="maxOpenPreparedStatements" 	value="100" />
		<property name="testOnBorrow" 				value="true" />
		<property name="testOnReturn" 				value="false" />
		<property name="testWhileIdle" 				value="false" />
		<property name="validationQuery" 			value="SELECT 1 from dual" />
	</bean>


	<bean id="dataSource_neo" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" 			value="${emsdb.driver}" />
		<property name="url" 						value="${emsdb.url}" />
		<property name="username" 					value="${emsdb.user}" />
		<property name="password"					value="${emsdb.passwd}" />
		<property name="maxActive" 					value="20" />
		<property name="maxIdle" 					value="4" />
		<property name="minIdle" 					value="2" />
		<property name="maxWait" 					value="-1" />
		<property name="initialSize" 				value="20" />
		<property name="poolPreparedStatements" 	value="true" />
		<property name="maxOpenPreparedStatements" 	value="100" />
		<property name="testOnBorrow" 				value="true" />
		<property name="testOnReturn" 				value="false" />
		<property name="testWhileIdle" 				value="false" />
		<property name="validationQuery" 			value="SELECT 1 from dual" />
	</bean> -->

</beans>
