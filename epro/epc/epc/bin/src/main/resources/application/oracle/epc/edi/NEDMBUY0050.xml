<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="NEDMBUY0050">

	<typeAlias alias="resultClass"	type="lcn.module.common.util.HashBox" />
	<typeAlias alias="paramClass"	type="lcn.module.common.util.HashBox" />
	
	<typeAlias alias="nEDMBUY0050VO" 		type="com.lottemart.epc.edi.buy.model.NEDMBUY0050VO" />
	
	<!-- 리스트 MAP -->
	<resultMap id="nEDMBUY0050ListMap" 	class="nEDMBUY0050VO">
		<result column="DEPTH"  			property="depth" 		/>		<!-- 뎁스 -->
		<result column="STR_NM_T"  			property="strNmT" 		/>		<!-- 점포명 -->
		<result column="BUY_SLIP_NO"  		property="buySlipNo" 	/>		<!-- 매입전표번호 -->
		<result column="TOT_QTY"  			property="totQty" 		/>		<!-- 발주수량 -->
		<result column="TOT_PRC"  			property="totPrc" 		/>		<!-- 원가 -->
		<result column="BUY_RTN_NM"  		property="buyRtnNm" 	/>		<!-- 납품.매입(1:반품,2:매입,3:반품정정,4:매입정정) -->
		<result column="ORD_FG"  			property="ordFg" 		/>		<!-- 발주구분 -->
		<result column="ORD_DY"  			property="ordDy" 		/>		<!-- 발주전표번호 -->
		<result column="CTR_ARR_DY"  		property="ctrArrDy" 	/>		<!-- 센터입하일자 -->
		<result column="SPLY_DY"  			property="splyDy" 		/>		<!-- 납품일자 -->
		<result column="ROUTE_FG"  			property="routeFg" 		/>		<!-- 배송구분 -->
		<result column="STR_NM"  			property="strNm" 		/>		<!-- 점포명 -->
		<result column="VEN_CD"  			property="venCd" 		/>		<!-- 업체코드 -->
		<result column="PROD_CD"  			property="prodCd" 		/>		<!-- 상품코드 -->
		<result column="PROD_NM"  			property="prodNm" 		/>		<!-- 상품명 -->
		<result column="PROD_STD"  			property="prodStd" 		/>		<!-- 상품규격 -->
		<result column="ORD_IPSU"  			property="ordIpsu" 		/>		<!-- 발주입수 -->
		<result column="DANWI"  			property="danwi" 		/>		<!-- 판매마스터(0:EA,1:BOX,2:KG,3:묶음,4:행거,5:100G,6:10G,7:G) -->
		<result column="BUY_BOX_QTY"  		property="buyBoxQty" 	/>		<!-- 매입박스수량 -->
		<result column="BUY_QTY"  			property="buyQty" 		/>		<!-- 매입수량 -->
		<result column="BUY_BUY_PRC"  		property="buyBuyPrc" 	/>		<!-- 매입원가 -->
	 </resultMap>

	<!-- 전표상세별 -->
	<select id="TSC_JUNPYO_DETAIL-SELECT01" parameterClass="nEDMBUY0050VO" resultMap="nEDMBUY0050ListMap">
		/* NEDMBUY0050.TSC_JUNPYO_DETAIL-SELECT01 */
		SELECT 	Z.*
		FROM
		(
		SELECT	'1' AS DEPTH
				,	A.STR_NM AS STR_NM_T
				,	BUY_SLIP_NO
				,	NVL(SUM(A.TOT_QTY), 0) AS TOT_QTY
				,	NVL(SUM(A.TOT_PRC), 0) AS TOT_PRC
				,	BUY_RTN_NM
				,	C1.CD_NM AS ORD_FG
				,	(SELECT TO_CHAR(TO_DATE(ORD_DY, 'yyyymmdd'), 'yyyy-mm-dd') FROM TPC_ORD WHERE ORD_SLIP_NO = A.ORD_SLIP_NO LIMIT 1)	AS ORD_DY
				,	TO_CHAR(TO_DATE(A.CTR_ARR_DY,'yyyymmdd'),'YYYY-MM-DD') 			AS CTR_ARR_DY
				,	TO_CHAR(TO_DATE(A.SPLY_DY,'yyyymmdd'),'YYYY-MM-DD') 			AS SPLY_DY
				,	C2.CD_NM AS ROUTE_FG
				,	D.STR_NM
				,	VEN_CD
				,	'' AS PROD_CD
				,	'' AS PROD_NM
				,	'' AS PROD_STD
				,	0 AS ORD_IPSU
				,	'' AS DANWI
				,	0  AS BUY_BOX_QTY 
				,	0  AS BUY_QTY 
				,	0  AS BUY_BUY_PRC
			FROM
			(
				SELECT	/*+ INDEX(B IX_TPC_ORD_PROD) */
						A.BUY_SLIP_NO
					,	A.STR_CD
					,	A.STR_NM
					,	A.ORD_SLIP_NO
					,	A.PROD_CD
					,	A.VEN_CD
					,	A.BUY_DY
					,	A.BUY_RTN_FG
					,	A.BUY_RTN_NM
					,	A.ORD_FG
					,	(B.ORD_QTY) AS TOT_QTY
					,	(B.BUY_PRC) AS TOT_PRC
					,	A.CTR_ARR_DY
					,	A.SPLY_DY
					,	A.ROUTE_FG
				FROM
				(
					SELECT	/*+ INDEX(C PK_TPC_ORD) */
							A.BUY_SLIP_NO
						,	A.STR_CD
						,	A.STR_NM
						,	A.ORD_SLIP_NO				
						,	A.PROD_CD
						,	A.VEN_CD
						,	A.BUY_DY
						,	A.BUY_RTN_FG
						,	A.BUY_RTN_NM
						,	C.ORD_FG
						,	C.CTR_ARR_DY
						,	C.SPLY_DY
						,	C.ROUTE_FG
					FROM	(
								SELECT 	/*+ INDEX(B IX_TPC_STR_BUY_PROD_02) */
										A.BUY_SLIP_NO 			AS BUY_SLIP_NO
									, 	A.STR_CD				AS STR_CD
									,	(SELECT STR_NM FROM STORE WHERE STR_CD = A.STR_CD) AS STR_NM
									,  	A.ORD_SLIP_NO			AS ORD_SLIP_NO
									,  	B.PROD_CD 				AS PROD_CD
									,  	A.VEN_CD 				AS VEN_CD
									, 	A.BUY_DY 				AS BUY_DY
									,  	A.BUY_RTN_FG 			AS BUY_RTN_FG
									, 	C.CD_NM 				AS BUY_RTN_NM
								FROM   TPC_STR_BUY A 
								INNER JOIN TPC_STR_BUY_PROD B 	ON A.BUY_SLIP_NO = B.BUY_SLIP_NO AND A.YYYY = B.YYYY
								LEFT OUTER JOIN TPC_CODE C 		ON C.MAJOR_CD = 'SPP01' AND A.BUY_RTN_FG = C.MINOR_CD
                             
					            	WHERE 	A.BUY_DY BETWEEN replace(#srchStartDate#,'-','') and replace(#srchEndDate#,'-','')
									<isEmpty property="srchEntpCode">
										<isNotEmpty  property="venCds"  prepend="AND">
											<iterate prepend="VEN_CD IN " property="venCds" open="(" close=")" conjunction=",">
												#venCds[]#
											</iterate>
										</isNotEmpty>
									</isEmpty>	
									<isNotEmpty  property="srchEntpCode"  prepend="AND">
										A.VEN_CD = #srchEntpCode#
									</isNotEmpty>
									
									<isNotEmpty property="srchStoreVal"  prepend="AND">
										<iterate prepend="A.STR_CD IN " property="srchStoreVal" open="(" close=")" conjunction=",">
											#srchStoreVal[]#
										</iterate>
									</isNotEmpty>
									
									<isNotEmpty  property="srchProductVal"  prepend="AND">
										B.PROD_CD = #srchProductVal#
									</isNotEmpty>
									
									<isNotEmpty  property="srchBuying"  prepend="AND">
										A.BUY_RTN_FG = #srchBuying#
									</isNotEmpty>	
					            
					            
					                            
							) A
							LEFT OUTER JOIN TPC_ORD C ON A.ORD_SLIP_NO = C.ORD_SLIP_NO
				) A LEFT OUTER JOIN TPC_ORD_PROD B  ON A.ORD_SLIP_NO = B.ORD_SLIP_NO AND  A.PROD_CD = B.PROD_CD

            ) A 	LEFT OUTER JOIN TPC_CODE C1 ON C1.MAJOR_CD = 'ORD01' AND C1.MINOR_CD = A.ORD_FG
					LEFT OUTER JOIN TPC_CODE C2 ON C2.MAJOR_CD = 'SRR04' AND C2.MINOR_CD = A.ROUTE_FG
					INNER JOIN STORE D	ON A.STR_CD = D.STR_CD
			GROUP BY BUY_RTN_NM, BUY_SLIP_NO, ORD_FG, ORD_SLIP_NO, CTR_ARR_DY, SPLY_DY, ROUTE_FG, D.STR_NM, VEN_CD, C1.CD_NM, C2.CD_NM, A.STR_NM
			
UNION ALL			
		SELECT	'2' AS DEPTH
				,	'' AS STR_NM_T
				,	BUY_SLIP_NO
				,	NVL(SUM(A.TOT_QTY), 0) AS TOT_QTY
				,	NVL(SUM(A.TOT_PRC), 0) AS TOT_PRC
				,	'' AS BUY_RTN_NM
				,	'' AS ORD_FG
				,	'' AS ORD_DY
				,	'' AS CTR_ARR_DY
				,	'' AS SPLY_DY
				,	'' AS ROUTE_FG
				,	'' AS STR_NM
				,	'' AS VEN_CD
				,	PROD_CD
				,	PROD_NM
				,	PROD_STD
				,	ORD_IPSU
				,	DANWI
				,	NVL(SUM(A.BUY_BOX_QTY), 0) 	AS BUY_BOX_QTY
				,	NVL(SUM(A.BUY_QTY), 0) 		AS BUY_QTY
				,	NVL(SUM(A.BUY_BUY_AMT), 0) 	AS BUY_BUY_PRC
			FROM
			(
				SELECT	/*+ INDEX(B IX_TPC_ORD_PROD) */
						A.BUY_SLIP_NO
					,	A.ORD_SLIP_NO
					,	A.BUY_PROD_FG       
					,	A.SRCMK_CD
					,	A.PROD_CD
					,	A.PROD_NM
					,	A.PROD_STD
				    ,	A.ORD_IPSU
					,	A.DANWI
					,	A.BUY_DY
					,	A.BUY_RTN_FG
					,	A.BUY_QTY
					,	(B.ORD_QTY) AS TOT_QTY
					,	(B.BUY_PRC) AS TOT_PRC
					,	A.BUY_BOX_QTY
					,	A.BUY_BUY_PRC
					,	A.BUY_BUY_AMT
				FROM
				(
					SELECT	A.BUY_SLIP_NO
						,	A.ORD_SLIP_NO
						,	A.BUY_PROD_FG
						,	A.SRCMK_CD
						,	A.PROD_CD
						,	A.PROD_NM
						,	A.PROD_STD
						,	A.ORD_IPSU
						,	A.DANWI
						,	A.BUY_DY
						,	A.BUY_RTN_FG
						,	A.BUY_QTY
						,	A.BUY_BOX_QTY
						,	A.BUY_BUY_PRC
						,	A.BUY_BUY_AMT
					FROM	(
								SELECT 	/*+ INDEX(B IX_TPC_STR_BUY_PROD_02) */
										A.BUY_SLIP_NO 			AS BUY_SLIP_NO
									,  	A.ORD_SLIP_NO			AS ORD_SLIP_NO
									, 	B.BUY_PROD_FG 			AS BUY_PROD_FG
									, 	B.SRCMK_CD 				AS SRCMK_CD
									,  	B.PROD_CD 				AS PROD_CD
									, 	B.PROD_NM 				AS PROD_NM
									, 	B.PROD_STD 				AS PROD_STD
									, 	B.ORD_IPSU				AS ORD_IPSU
									,   SUBSTR (E.CD_NM, 1, 10) AS DANWI
									, 	A.BUY_DY 				AS BUY_DY
									,  	A.BUY_RTN_FG 			AS BUY_RTN_FG
									,  	B.BUY_QTY 				AS BUY_QTY
									, 	B.BUY_BOX_QTY 			AS BUY_BOX_QTY
									,  	B.BUY_BUY_PRC 			AS BUY_BUY_PRC
									, 	B.BUY_BUY_AMT 			AS BUY_BUY_AMT
								FROM   TPC_STR_BUY A 
										INNER JOIN TPC_STR_BUY_PROD B 	ON A.BUY_SLIP_NO = B.BUY_SLIP_NO AND A.YYYY = B.YYYY
										LEFT OUTER JOIN TPC_CODE E 		ON E.MAJOR_CD = 'CSA01' AND B.ORD_UNIT = E.MINOR_CD
                                
                                 WHERE 	A.BUY_DY BETWEEN replace(#srchStartDate#,'-','') and replace(#srchEndDate#,'-','')
									<isEmpty property="srchEntpCode">
										<isNotEmpty  property="venCds"  prepend="AND">
											<iterate prepend="VEN_CD IN " property="venCds" open="(" close=")" conjunction=",">
												#venCds[]#
											</iterate>
										</isNotEmpty>
									</isEmpty>	
									<isNotEmpty  property="srchEntpCode"  prepend="AND">
										A.VEN_CD = #srchEntpCode#
									</isNotEmpty>
									
									<isNotEmpty property="srchStoreVal"  prepend="AND">
										<iterate prepend="A.STR_CD IN " property="srchStoreVal" open="(" close=")" conjunction=",">
											#srchStoreVal[]#
										</iterate>
									</isNotEmpty>
									
									<isNotEmpty  property="srchProductVal"  prepend="AND">
										B.PROD_CD = #srchProductVal#
									</isNotEmpty>
									
									<isNotEmpty  property="srchBuying"  prepend="AND">
										A.BUY_RTN_FG = #srchBuying#
									</isNotEmpty>											
									      
							) A
				) A 	LEFT OUTER JOIN TPC_ORD_PROD B  ON A.ORD_SLIP_NO = B.ORD_SLIP_NO AND  A.PROD_CD = B.PROD_CD
			) A				
			GROUP BY BUY_SLIP_NO, PROD_CD, PROD_NM, PROD_STD, ORD_IPSU, DANWI
		) Z
		ORDER BY BUY_SLIP_NO, DEPTH, PROD_CD
	</select>
	
	
</sqlMap>
